diff -ruN libdvbsi++.orig/include/dvbsi++/descriptor_tag.h libdvbsi++/include/dvbsi++/descriptor_tag.h
--- libdvbsi++.orig/include/dvbsi++/descriptor_tag.h	2005-12-26 21:48:57.000000000 +0100
+++ libdvbsi++/include/dvbsi++/descriptor_tag.h	2011-02-27 16:45:31.234398377 +0100
@@ -100,6 +100,7 @@
 	AAC_DESCRIPTOR					= 0x7C,
 	// EN 300 468 1.7.1 defines 0x7D - 0x7E reserved
 	EXTENSION_DESCRIPTOR				= 0x7F,
+	TERRESTRIAL_LCN_DESCRIPTOR				= 0x83,
 	/* 0x80 - 0xFE: User defined */
 	/* 0xFF: Forbidden */
 	FORBIDDEN_DESCRIPTOR				= 0xFF
diff -ruN libdvbsi++.orig/include/dvbsi++/Makefile.am libdvbsi++/include/dvbsi++/Makefile.am
--- libdvbsi++.orig/include/dvbsi++/Makefile.am	2008-06-03 17:02:23.000000000 +0200
+++ libdvbsi++/include/dvbsi++/Makefile.am	2011-02-27 16:31:58.857210096 +0100
@@ -114,6 +114,7 @@
 	telephone_descriptor.h \
 	teletext_descriptor.h \
 	terrestrial_delivery_system_descriptor.h \
+	terrestrial_lcn_descriptor.h \
 	time_date_section.h \
 	time_offset_section.h \
 	time_shifted_service_descriptor.h \
diff -ruN libdvbsi++.orig/include/dvbsi++/terrestrial_lcn_descriptor.h libdvbsi++/include/dvbsi++/terrestrial_lcn_descriptor.h
--- libdvbsi++.orig/include/dvbsi++/terrestrial_lcn_descriptor.h	1970-01-01 01:00:00.000000000 +0100
+++ libdvbsi++/include/dvbsi++/terrestrial_lcn_descriptor.h	2011-02-27 17:29:44.550316848 +0100
@@ -0,0 +1,19 @@
+#ifndef __terrestrial_lcn_descriptor_h__
+#define __terrestrial_lcn_descriptor_h__
+
+#include "descriptor.h"
+
+class TerrestrialLcnDescriptor : public Descriptor
+{
+	protected:
+		uint16_t	count;
+
+	public:
+		TerrestrialLcnDescriptor(const uint8_t * const buffer);
+
+		uint16_t getCount(void) const;
+		uint16_t getServiceId(uint16_t index) const;
+		uint16_t getLcn(uint16_t index) const;
+};
+
+#endif /* __terrestrial_lcn_descriptor_h__ */
diff -ruN libdvbsi++.orig/src/descriptor_container.cpp libdvbsi++/src/descriptor_container.cpp
--- libdvbsi++.orig/src/descriptor_container.cpp	2008-06-03 17:02:23.000000000 +0200
+++ libdvbsi++/src/descriptor_container.cpp	2011-02-27 16:46:03.655335615 +0100
@@ -98,6 +98,7 @@
 #include <dvbsi++/telephone_descriptor.h>
 #include <dvbsi++/teletext_descriptor.h>
 #include <dvbsi++/terrestrial_delivery_system_descriptor.h>
+#include <dvbsi++/terrestrial_lcn_descriptor.h>
 #include <dvbsi++/time_shifted_service_descriptor.h>
 #include <dvbsi++/time_slice_fec_identifier_descriptor.h>
 #include <dvbsi++/transport_protocol_descriptor.h>
@@ -348,6 +349,9 @@
 
 	case SHORT_SMOOTHING_BUFFER_DESCRIPTOR:
 		return new ShortSmoothingBufferDescriptor(buffer);
+		
+	case TERRESTRIAL_LCN_DESCRIPTOR:
+		return new TerrestrialLcnDescriptor(buffer);
 
 	default:
 		return new Descriptor(buffer);
diff -ruN libdvbsi++.orig/src/Makefile.am libdvbsi++/src/Makefile.am
--- libdvbsi++.orig/src/Makefile.am	2008-06-03 17:02:23.000000000 +0200
+++ libdvbsi++/src/Makefile.am	2011-02-27 16:32:32.033398668 +0100
@@ -109,6 +109,7 @@
 	telephone_descriptor.cpp \
 	teletext_descriptor.cpp \
 	terrestrial_delivery_system_descriptor.cpp \
+	terrestrial_lcn_descriptor.cpp \
 	time_date_section.cpp \
 	time_offset_section.cpp \
 	time_shifted_service_descriptor.cpp \
diff -ruN libdvbsi++.orig/src/terrestrial_lcn_descriptor.cpp libdvbsi++/src/terrestrial_lcn_descriptor.cpp
--- libdvbsi++.orig/src/terrestrial_lcn_descriptor.cpp	1970-01-01 01:00:00.000000000 +0100
+++ libdvbsi++/src/terrestrial_lcn_descriptor.cpp	2011-02-27 17:55:10.259399110 +0100
@@ -0,0 +1,34 @@
+#include <dvbsi++/byte_stream.h>
+#include <dvbsi++/terrestrial_lcn_descriptor.h>
+
+TerrestrialLcnDescriptor::TerrestrialLcnDescriptor(const uint8_t * const buffer) : Descriptor(buffer)
+{
+	ASSERT_MIN_DLEN(4);
+	
+	count = descriptorLength / 4;
+}
+
+uint16_t TerrestrialLcnDescriptor::getCount(void) const
+{
+	return count;
+}
+
+uint16_t TerrestrialLcnDescriptor::getServiceId(uint16_t index) const
+{
+	if (index >= count)
+		return 0;
+	
+	uint16_t offset = index * 4;
+	
+	return (dataBytes[offset] << 8) | dataBytes[offset + 1];
+}
+
+uint16_t TerrestrialLcnDescriptor::getLcn(uint16_t index) const
+{
+	if (index >= count)
+		return 0;
+	
+	uint16_t offset = index * 4;
+	
+	return ((dataBytes[offset+2] & 0x3) << 8) | dataBytes[offset + 3];
+}
